<?xml version="1.0" encoding="UTF-8"?>
<protocol name="ext_blur_mask_unstable_v1">

    <copyright>
        Copyright Â© 2023 John Panos

        Permission is hereby granted, free of charge, to any person obtaining a
        copy of this software and associated documentation files (the "Software"),
        to deal in the Software without restriction, including without limitation
        the rights to use, copy, modify, merge, publish, distribute, sublicense,
        and/or sell copies of the Software, and to permit persons to whom the
        Software is furnished to do so, subject to the following conditions:

        The above copyright notice and this permission notice (including the next
        paragraph) shall be included in all copies or substantial portions of the
        Software.

        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
        THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
        FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
        DEALINGS IN THE SOFTWARE.
    </copyright>

    <interface name="ext_blur_mask_manager_v1" version="1">
        <description summary="protocol for setting a blur mask on a wl_surface">
            Adds a blur mask to a part of a wl_surface.

            This interface defines a mechanism for a Wayland client to tell the
            compositor to blur the background of a wl_surface given a specified
            wl_buffer based blur mask.
        </description>

        <enum name="error">
            <entry name="blur_mask_exists" value="0"
                summary="the surface already has a blur mask object associated" />
            <entry name="blur_mask_invalid" value="1"
                summary="the specified wl_buffer mask is invalid" />
        </enum>

        <request name="get_blur">
            <description summary="extend surface interface for blur">
                Instantiate an interface extension for the given wl_surface to request
                blurring.

                If the given wl_surface already has a ext_blur_v1 object
                associated, the blur_mask_exists protocol error is raised.
            </description>
            <arg name="id" type="new_id" interface="ext_blur_mask_v1" />
            <arg name="surface" type="object" interface="wl_surface" />
        </request>
    </interface>

    <interface name="ext_blur_mask_v1" version="1">
        <description summary="per-surface blur interface">
            An additional interface to a wl_surface object, which allows the client
            to hint to the compositor that it would like to blur a section of a wl_surface.
        </description>

        <request name="set_mask">
            <description summary="set blur mask">
                Set the blur mask for the associated wl_surface. This state is
                double-buffered and is applied on the next wl_surface.commit.

                The compositor is free to dynamically respect or ignore this hint based
                on various conditions like hardware capabilities, surface state and
                user preferences.
            </description>
            <arg name="buffer_mask" type="object" interface="wl_buffer" />
        </request>

        <request name="release" type="destructor">
            <description summary="release blur mask">
                Releases this surface blur object and disables all surface blurring.
                The change will be applied on the next wl_surface.commit.
            </description>
        </request>
    </interface>
</protocol>